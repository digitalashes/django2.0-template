---
{% raw %}
- name: Copy .env file
  copy:
    src: "{{ project_path }}/env.example"
    dest: "{{ django_settings_path }}/.env"
  tags: .env

- name: Set DJANGO_DATABASE_URL PostgreSQL
  lineinfile:
    dest: "{{ django_settings_path }}/.env"
    regexp: ^\s*DJANGO_DATABASE_URL=sqlite://.*$
    line: "DJANGO_DATABASE_URL=postgres:///{{ project_name }}"
    backrefs: yes
  run_once: yes
  when: "postgis_install == false"
  tags: .env

- name: Set DJANGO_DATABASE_URL PostGIS
  lineinfile:
    dest: "{{ django_settings_path }}/.env"
    regexp: ^\s*DJANGO_DATABASE_URL=sqlite://.*$
    line: "DJANGO_DATABASE_URL=postgis:///{{ project_name }}"
    backrefs: yes
  run_once: yes
  when: "postgis_install == true"
  tags: .env

- name: Set DJANGO_DEBUG
  lineinfile:
    dest: "{{ django_settings_path }}/.env"
    regexp: ^\s*DJANGO_DEBUG=False.*$
    line: "DJANGO_DEBUG=True"
    backrefs: yes
  run_once: yes
  tags: .env

- name: Generate Secret Key
  command: "{{ virtualenv_path }}/bin/python -c 'import secrets; print(secrets.token_urlsafe(50))'"
  register: sk
  tags: .env

- name: Set DJANGO_SECRET_KEY
  lineinfile:
    dest: "{{ django_settings_path }}/.env"
    regexp: ^\s*DJANGO_SECRET_KEY=.*$
    line: "DJANGO_SECRET_KEY={{ sk.stdout }}"
    backrefs: yes
  run_once: yes
  tags: .env

{%- endraw %}
